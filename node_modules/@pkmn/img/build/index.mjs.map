{"version":3,"sources":["../src/data/index.ts","../src/index.ts"],"sourcesContent":["import * as DataJSON from './data.json';\nimport * as I from './interface';\n\n// These cryptic field names cut down bandwidth size - see\n// getPokemon below for what the obfuscated names represent\nexport interface PokemonData {\n  g: I.GenerationNum;\n  n: number;\n  i?: number;\n  s?: number;\n  if?: number;\n  il?: number;\n  nd?: boolean;\n  ns?: boolean;\n  m?: string[];\n  f?: I.Dimensions;\n  ff?: I.Dimensions;\n  b?: I.Dimensions;\n  bf?: I.Dimensions;\n  bw?: {\n    f?: I.Dimensions;\n    ff?: I.Dimensions;\n    b?: I.Dimensions;\n    bf?: I.Dimensions;\n  };\n}\n\nconst DATA = DataJSON as {\n  pokemon: {[spriteid: string]: PokemonData};\n  items: {[id: string]: number};\n  avatars: {[key: string]: string};\n};\n\nfunction toID(s: string) {\n  return ('' + s).toLowerCase().replace(/[^a-z0-9]+/g, '') as I.ID;\n}\n\nexport const Data = new class implements I.Data {\n  getPokemon(name: string) {\n    let id = toID(name);\n    if (id === 'toxtricitylowkeygmax') id = 'toxtricitygmax' as I.ID;\n    const data = DATA.pokemon[id];\n    if (!data) return undefined;\n    return {\n      id,\n      spriteid: data.s ? `${id.slice(0, data.s)}-${id.slice(data.s)}` : id,\n      gen: data.g,\n      num: data.n,\n      icon: data.i,\n      iconf: data.if,\n      iconl: data.il,\n      dex: data.g < 8 && !data.nd,\n      nonshiny: data.ns,\n      missing: data.m,\n      front: data.f,\n      frontf: data.ff,\n      back: data.b,\n      backf: data.bf,\n      bw: {\n        front: data.bw?.f,\n        frontf: data.bw?.ff,\n        back: data.bw?.b,\n        backf: data.bw?.bf,\n      },\n    };\n  }\n\n  getItem(name: string) {\n    const spritenum = DATA.items[toID(name)];\n    return spritenum ? {spritenum} : undefined;\n  }\n\n  getAvatar(key: string) {\n    return DATA.avatars[key];\n  }\n};\n","import * as A from './adaptable';\n\nimport {Data} from './data';\n\nexport const Sprites = new A.Sprites(Data);\nexport const Icons = new A.Icons(Data);\n\nexport {GraphicsGen, AnimatedGraphicsGen, SecondFrameGraphicsGen, PokemonSprite} from './adaptable';\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AA2BA,IAAM,OAAO;AAMb,SAAS,KAAK,GAAW;AACvB,UAAQ,KAAK,GAAG,YAAY,EAAE,QAAQ,eAAe,EAAE;AACzD;AAEO,IAAM,OAAO,IAAI,MAAwB;AAAA,EAC9C,WAAW,MAAc;AAtC3B;AAuCI,QAAI,KAAK,KAAK,IAAI;AAClB,QAAI,OAAO;AAAwB,WAAK;AACxC,UAAM,OAAO,KAAK,QAAQ;AAC1B,QAAI,CAAC;AAAM,aAAO;AAClB,WAAO;AAAA,MACL;AAAA,MACA,UAAU,KAAK,IAAI,GAAG,GAAG,MAAM,GAAG,KAAK,CAAC,KAAK,GAAG,MAAM,KAAK,CAAC,MAAM;AAAA,MAClE,KAAK,KAAK;AAAA,MACV,KAAK,KAAK;AAAA,MACV,MAAM,KAAK;AAAA,MACX,OAAO,KAAK;AAAA,MACZ,OAAO,KAAK;AAAA,MACZ,KAAK,KAAK,IAAI,KAAK,CAAC,KAAK;AAAA,MACzB,UAAU,KAAK;AAAA,MACf,SAAS,KAAK;AAAA,MACd,OAAO,KAAK;AAAA,MACZ,QAAQ,KAAK;AAAA,MACb,MAAM,KAAK;AAAA,MACX,OAAO,KAAK;AAAA,MACZ,IAAI;AAAA,QACF,QAAO,UAAK,OAAL,mBAAS;AAAA,QAChB,SAAQ,UAAK,OAAL,mBAAS;AAAA,QACjB,OAAM,UAAK,OAAL,mBAAS;AAAA,QACf,QAAO,UAAK,OAAL,mBAAS;AAAA,MAClB;AAAA,IACF;AAAA,EACF;AAAA,EAEA,QAAQ,MAAc;AACpB,UAAM,YAAY,KAAK,MAAM,KAAK,IAAI;AACtC,WAAO,YAAY,EAAC,UAAS,IAAI;AAAA,EACnC;AAAA,EAEA,UAAU,KAAa;AACrB,WAAO,KAAK,QAAQ;AAAA,EACtB;AACF;;;ACvEO,IAAMA,WAAU,IAAM,QAAQ,IAAI;AAClC,IAAMC,SAAQ,IAAM,MAAM,IAAI;","names":["Sprites","Icons"]}